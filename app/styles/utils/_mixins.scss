@mixin grid(
  $display: flex,  
  $flex-wrap: null, 
  $flex-direction: null,
  $flex-flow: null, 
  $align-items: null,
  $align-content: null,
  $justify-content: null,  
  $gutter: null
  ) {
  @if $display {
    display: $display;
  }
  @if $flex-direction {
    flex-direction: $flex-direction;
  }
  @if $flex-wrap {
    flex-wrap: $flex-wrap;
  }
  @if $flex-flow {
    flex-flow: $flex-flow;
  }
  @if $justify-content {
    justify-content: $justify-content;
  }
  @if $align-items {
    align-items: $align-items;
  }
  @if $align-content {
    align-content: $align-content;
  }
  @if $gutter {
    margin-left: $gutter / 2;
    margin-right: $gutter / 2;
  }
  @content;
}

@mixin grid-col(
  $col: null, 
  $col-offset: null, 
  $gutter: null, 
  $align-self: null, 
  $flex-grow: 0, 
  $flex-shrink: 0, 
  $flex-basis: auto, 
  $order: null, 
  $shorthand: true,  
  $width: null, 
  $max-width: null, 
  $min-width: null,
  $margin: null,
  $margin-top: null,
  $margin-bottom: null,
  $margin-both: null
  ) { 
  @if type-of($col) == number and unitless($col) == true {
    @if type-of($shorthand) == bool and $shorthand == true {
      flex: $flex-grow $flex-shrink (100% / $col);
    } @else {
      flex-grow: $flex-grow;
      flex-shrink: $flex-shrink;
		  flex-basis: 100% / $col;
    }
  } 
  @if type-of($col) == number and unitless($flex-basis) == false {
    @if type-of($shorthand) == bool and $shorthand == true {
      flex: $flex-grow $flex-shrink $flex-basis;
    } @else {
      flex-grow: $flex-grow;
      flex-shrink: $flex-shrink;
		  flex-basis: $flex-basis;
    }
  }
  @if $align-self != null {
		align-self: $align-self;
	}
	@if type-of($order) == number {
		order: $order;
  }
  @if type-of($width) == number and unitless($width) == false {
		width: $width;
	} @else if type-of($width) == string and $width == 'auto' {
    width: auto;
  }
  @if type-of($max-width) == number and unitless($max-width) == false {
    max-width: $max-width;
	} @if type-of($max-width) == string and $max-width == 'auto' {
    max-width: auto;
  }
  @if type-of($min-width) == number and unitless($min-width) == false {
    min-width: $min-width;
	} @else if type-of($min-width) == string and $min-width == 'auto' {
    min-width: auto;
  }
  @if type-of($margin-top) == number and unitless($margin-top) == false {
    margin-top: $gutter;
  }
  @if type-of($margin-bottom) == number and unitless($margin-bottom) == false {
    margin-top: $gutter;
  }
  @if type-of($margin-both) == number and unitless($margin-both) == false {
    margin-top: $gutter / 2;
    margin-bottom: $gutter / 2;
  }
  @content;
}

@mixin breakpoint-xs {
  @media screen and (max-width: #{$screen-xs}) {
    @content;
  }
}

@mixin breakpoint-sm {
  @media screen and (max-width: #{$screen-sm}) {
    @content;
  }
}

@mixin breakpoint-lg {
  @media screen and (max-width: #{$screen-lg}) {
    @content;
  }
}

@mixin breakpoint-xl {
  @media screen and (max-width: #{$screen-xl}) {
    @content;
  }
}

@mixin breakpoint-xxl {
  @media screen and (max-width: #{$screen-xxl}) {
    @content;
  }
}